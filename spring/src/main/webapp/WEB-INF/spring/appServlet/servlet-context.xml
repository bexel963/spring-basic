<?xml version="1.0" encoding="UTF-8"?>
<!-- 각 스키마에서 정리한 태그들을 사용하기위해 넣어주는 것들 (4개) -->
<!-- beans태그에서 쓰는 xmlns인터페이스, 원래는 각 인터페이스마다 접두사를 줘야한다. mvc schema에 정의되어있는 태그 접두사는 mvc: 생략가능 -->
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	
	<!-- servelt-context는 스프링의 web관련 파일, root-context는 web관련 파일 아닌거 -->
	<!-- resources파일 매핑을 /* 으로 해 줌으로써 spring/html파일이름 으로만 요청 해주면 된다. -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- InternalResourceViewResolver가 DispatcherServlet으로부터 view이름을 전달 받으면 거기에 접두사 접미사를 붙여서 반환한다. -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- 요청을 받아서 아무 작업 없이 바로 다른 화면으로 연결해주는 메서드를 간단히 처리해주는 코드. -->
	<!-- view-controller는 GET방식만 허용한다. -->
	<view-controller path="/register/add" view-name="registerForm"/>
	
	<!-- view-controller는 spring mvc schema에 정의되어있는 태그인데 mvc는 태그앞에 접두사mvc 생략 가능 -->
	<!-- context schema에 정의되어있는 태그 접두사 context: 생략 안 됨 -->
	<context:component-scan base-package="com.fastcampus.spring" />
	
	<!--  globalValidator빈으로 등록하고 그거를 globalValidator로 등록해준다. -->
	<annotation-driven validator="globalValidator"/>
	<beans:bean id="globalValidator" class="com.fastcampus.spring.GlobalValidator"/>
	
	<!-- 에러메시지.properties 등록 -->
	<!-- ResourceBundleMessageSource가 등록한 메시지를 읽어서 해당 코드키 값에 맞는 메시지를 대신 보여준다. -->
	<beans:bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<beans:property name="basenames">
			<beans:list>
				<beans:value>error_message</beans:value> <!-- /src/main/resources/error_message.properties -->
			</beans:list>
		</beans:property>
		<beans:property name="defaultEncoding" value="UTF-8"/>
	</beans:bean>
	
	
</beans:beans>
